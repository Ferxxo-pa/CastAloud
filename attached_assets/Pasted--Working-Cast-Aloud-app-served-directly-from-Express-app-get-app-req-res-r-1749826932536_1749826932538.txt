 });
});

// Working Cast Aloud app served directly from Express
app.get('/app', (req, res) => {
  res.setHeader('Content-Type', 'text/html');
  res.send(`
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cast Aloud - Voice Accessibility for Farcaster</title>
    <style>
        body { 
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; 
            margin: 0; 
            padding: 0; 
            background: #fafafa;
        }
        .container { max-width: 500px; margin: 0 auto; padding: 20px; }
        .header { text-align: center; margin-bottom: 30px; }
        .app-title { color: #8A63D2; font-size: 28px; font-weight: bold; margin: 0; }
        .app-subtitle { color: #666; margin: 10px 0 0 0; }
        .card { 
            background: white; 
            border-radius: 12px; 
            padding: 24px; 
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            margin-bottom: 20px;
        }
        .btn { 
            background: #8A63D2; 
            color: white; 
            border: none; 
            padding: 12px 24px; 
            border-radius: 8px; 
            cursor: pointer; 
            font-size: 16px;
            width: 100%;
            margin: 8px 0;
        }
        .btn:hover { background: #7652C4; }
        .btn-secondary { 
            background: #f0f0f0; 
            color: #333; 
        }
        .btn-secondary:hover { background: #e0e0e0; }
        .voice-settings { 
            background: #f8f9fa; 
            border-radius: 8px; 
            padding: 16px; 
            margin-top: 16px;
            display: none;
        }
        .form-group { margin: 12px 0; }
        .form-group label { display: block; margin-bottom: 4px; font-weight: 500; }
        .form-group select, .form-group input { 
            width: 100%; 
            padding: 8px; 
            border: 1px solid #ddd; 
            border-radius: 4px; 
        }
        .how-it-works { 
            background: #f0f7ff; 
            border-radius: 8px; 
            padding: 16px; 
            margin-top: 16px;
        }
        .status { 
            position: fixed; 
            top: 10px; 
            right: 10px; 
            background: #28a745; 
            color: white; 
            padding: 8px 12px; 
            border-radius: 4px; 
            font-size: 12px;
        }
    </style>
</head>
<body>
    <div class="status">‚úì Working Version</div>
    
    <div class="container">
        <div class="header">
            <h1 class="app-title">Cast Aloud</h1>
            <p class="app-subtitle">Voice accessibility tools for reading and replying to Farcaster casts</p>
        </div>
        
        <div class="card">
            <h2 style="margin-top: 0;">Try the Mini App</h2>
            <p style="color: #666;">The mini app helps you read casts aloud and create voice replies with AI assistance.</p>
            
            <button class="btn" onclick="readSampleCast()">
                üîä Read Sample Cast Aloud
            </button>
            
            <button class="btn btn-secondary" onclick="toggleVoiceSettings()">
                ‚öôÔ∏è Voice Settings
            </button>
            
            <div id="voiceSettings" class="voice-settings">
                <h3 style="margin-top: 0;">Voice Settings</h3>
                
                <div class="form-group">
                    <label>Voice:</label>
                    <select id="voiceSelect">
                        <option value="">Loading voices...</option>
                    </select>
                </div>
                
                <div class="form-group">
                    <label>Speed: <span id="speedValue">1.0x</span></label>
                    <input type="range" id="speedSlider" min="0.5" max="2" step="0.1" value="1.0">
                </div>
                
                <button class="btn btn-secondary" onclick="testVoice()">
                    Test Voice
                </button>
            </div>
            
            <div class="how-it-works">
                <h3 style="margin-top: 0;">How it works:</h3>
                <ol style="margin: 0; padding-left: 20px;">
                    <li>üìù Paste a Farcaster post URL or text directly</li>
                    <li>üîä Click "Read Aloud" to hear the content</li>
                    <li>‚úçÔ∏è Type your reply in the text area</li>
                    <li>ü§ñ Get AI feedback or polish your reply</li>
                    <li>üìã Copy the improved reply to post on Farcaster</li>
                </ol>
            </div>
        </div>
    </div>

    <script>
        let voices = [];
        let selectedVoice = null;
        let speechRate = 1.0;
        let isSpeaking = false;
        
        // Load voices
        function loadVoices() {
            voices = speechSynthesis.getVoices();
            const voiceSelect = document.getElementById('voiceSelect');
            voiceSelect.innerHTML = '<option value="">Select a voice...</option>';
            
            voices.forEach((voice, index) => {
                const option = document.createElement('option');
                option.value = index;
                option.textContent = \`\${voice.name} (\${voice.lang})\`;
                voiceSelect.appendChild(option);
            });
            
            if (voices.length > 0) {
                selectedVoice = voices[0];
                voiceSelect.value = 0;
            }
        }
        
        // Initialize voices
        speechSynthesis.addEventListener('voiceschanged', loadVoices);
        loadVoices();
        
        // Voice settings
        document.getElementById('voiceSelect').addEventListener('change', (e) => {
            if (e.target.value !== '') {
                selectedVoice = voices[parseInt(e.target.value)];
            }
        });
        
        document.getElementById('speedSlider').addEventListener('input', (e) => {
            speechRate = parseFloat(e.target.value);
            document.getElementById('speedValue').textContent = speechRate.toFixed(1) + 'x';
        });
        
        function toggleVoiceSettings() {
            const settings = document.getElementById('voiceSettings');
            settings.style.display = settings.style.display === 'block' ? 'none' : 'block';
        }
        
        function readSampleCast() {
            const sampleText = \`
                Hello from Cast Aloud! This is a sample Farcaster cast being read aloud using voice technology. 
                Cast Aloud helps make social media more accessible by providing voice features for reading and replying to posts.
                You can adjust the voice settings to customize your listening experience.
            \`;
            
            if (isSpeaking) {
                speechSynthesis.cancel();
                isSpeaking = false;
                return;
            }
            
            const utterance = new SpeechSynthesisUtterance(sampleText);
            utterance.rate = speechRate;
            if (selectedVoice) {
                utterance.voice = selectedVoice;
            }
            
            utterance.onstart = () => {
                isSpeaking = true;
                document.querySelector('.btn').textContent = '‚èπÔ∏è Stop Reading';
            };
            
            utterance.onend = () => {
                isSpeaking = false;
                document.querySelector('.btn').textContent = 'üîä Read Sample Cast Aloud';
            };
            
            speechSynthesis.speak(utterance);
        }
        
        function testVoice() {
            const testText = "This is a test of your voice settings. How does this sound?";
            const utterance = new SpeechSynthesisUtterance(testText);
            utterance.rate = speechRate;
            if (selectedVoice) {
                utterance.voice = selectedVoice;
            }
            speechSynthesis.speak(utterance);
        }
        
        console.log('Cast Aloud app loaded successfully');
    </script>
</body>
</html>`);
});